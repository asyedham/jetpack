- hosts: localhost
  vars:
    container_params: ""
  tasks:
      - name: set undercloud local interface
        block:
          - name: get undercloud_local_interface
            shell: |
              for i in /sys/class/net/*
              do
                udevcontent=`udevadm info -p $i --query property`
                if [[ $udevcontent =~ {{ ctlplane_interface }} ]]
                then
                  undercloud_local_interface=`echo $i | cut -d '/' -f 5`
                  break
                fi
              done
              echo $undercloud_local_interface
            register: local_interface
            delegate_to: "{{ undercloud_hostname }}"
            vars:
              ansible_python_interpreter: "{{ python_interpreter }}"
              ansible_user: "stack"
            become: true
          
          - name: add ip address on undercloud
            shell:
              sudo ip a a 192.168.24.25/24 brd 192.168.24.255 dev p2p4
            ignore_errors: true
            changed_when: false
            delegate_to: "{{ undercloud_hostname }}"
            when: tls_everywhere == true


          - name: set undercloud_local_interface
            set_fact:
              undercloud_local_interface: "{{ local_interface.stdout }}"
        when: virtual_uc != true

      - name: set undercloud_local_interface
        set_fact:
          undercloud_local_interface: "{{ undercloud_local_interface }}"
        when: virtual_uc == true

      - name: Setup undercloud.conf
        template:
            src: undercloud.conf.j2
            dest: "{{ undercloud_conf }}"

      - include_tasks: tasks/copykeys.yml
        vars:
          hostname: "{{ freeipa_hostname }}"
          ssh_user: "root"

      - include_tasks: tasks/get_interpreter.yml
        vars:
          hostname: "{{ freeipa_hostname }}"
          user: "root"

      - name: python interpreter
        set_fact:
          python_interpreter: "{{ (python_version.stderr_lines|length > 0) | ternary('/usr/libexec/platform-python', '/usr/bin/python') }}"

      - name: add freeipa_host to inventory file
        add_host:
          name: "freeipa"
          ansible_host: "{{ freeipa_hostname }}"
          ansible_ssh_private_key_file: "{{ ansible_ssh_key }}"
          ansible_user: "root"
          ansible_python_interpreter: "{{ python_interpreter }}"

      - name: freeipa setting
        copy:
          dest: /root/infrared/.venv/lib/python2.7/site-packages/infrared/common/roles/tls-everywhere/defaults/main.yml
          src: /root/jetpack/freeipa/main.yml

      - name: replace value for freeipa_local_interface var
        vars:
          freeipa_interface: "{{ hostvars['freeipa']['freeipa_local_interface'] }}"
        shell: |
          echo {{ freeipa_interface }}
          sed -i 's/freeipa_local_interface/{{ freeipa_interface }}/g' /root/infrared/.venv/lib/python2.7/site-packages/infrared/common/roles/tls-everywhere/defaults/main.yml

      - name: set_dns for undercloud 
        copy:
          dest: /root/infrared/.venv/lib/python2.7/site-packages/infrared/common/roles/tls-everywhere/tasks/set_undercloud_dns.yml
          src: freeipa/set_undercloud_dns.yml
     
      - name: add task for ipa-client execute
        blockinfile:
          path: /root/infrared/.venv/lib/python2.7/site-packages/infrared/common/roles/tls-everywhere/tasks/prepare_undercloud.yml
          insertbefore:  Prepare novajoin to work
          block: |
            ##ipa-client
              - name: execute ipa-client
                shell: |
                    sudo ipa-client-install --principal=admin --password={{ freeipa_admin_password }} --server={{ freeipa_server_hostname }} --domain={{ freeipa_cloud_domain }} --realm={{ freeipa_realm }} --hostname={{ freeipa_undercloud_hostname }} --unattended --force-join
                changed_when: false

 

      - name: Set container params
        set_fact:
          container_params: "--registry-mirror {{ registry_mirror }} --registry-namespace {{ registry_namespace }}"
        when: osp_release > 13

      - name: run tripleo-undercloud
        shell: |
          source {{ infrared_dir }}/.venv/bin/activate
          infrared tripleo-undercloud -vv \
          --version {{ osp_release }} \
          --build {{ osp_puddle }} \
          --images-task rpm \
          --config-file {{ undercloud_conf }} {{ container_params }} --tls-everywhere true > {{ log_directory }}/undercloud_install.log 2>&1
        args:
            chdir: "{{ infrared_dir }}"
        changed_when: false


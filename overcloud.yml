---
- hosts: localhost
  gather_facts: yes
  vars:
      instackenv_content: "{{ lookup('file', '{{ instackenv_file }}') | from_json }}"
  tasks:
      - name: Enable overcloud deployment with extra user defined templates
        block:
          - name: Check if the templates exist on the undercloud
            stat:
              path: "{{ item }}"
            register: env_files
            loop: "{{ extra_templates }}"
            delegate_to: "{{ undercloud_hostname }}"
            vars:
              ansible_python_interpreter: "{{ python_interpreter }}"

          - name: Copy files to undercloud if they do not exist
            copy:
              src: "{{ item.item }}"
              dest: "{{ infrared_dir }}/plugins/tripleo-overcloud/vars/overcloud/templates/extra.yml"
            loop: "{{ env_files.results }}"
            when: not item.stat.exists

          - name: Template out extra overcloud-templates file
            template:
              src: overcloud-templates.yml.j2
              dest: "{{ infrared_dir }}/plugins/tripleo-overcloud/vars/overcloud/templates/extra.yml"

        when: ( extra_templates is defined and extra_templates|length>0 ) or ( parameter_defaults is defined and parameter_defaults|length>0 )
      - name: Set compute count fact
        set_fact:
            compute_count: "{{ compute_count|default(instackenv_content.nodes|length - (controller_count|int + 1)) }}"

      - name: get nodes
        shell: |
            source ~/stackrc
            openstack baremetal node list -f value -c UUID
        register: nodes_uuids
        changed_when: false
        delegate_to: "{{ groups.undercloud|first }}"
        vars:
          ansible_python_interpreter: "{{ python_interpreter }}"

      - name: check registered nodes with requested node count
        debug:
           msg: "Less nodes {{ nodes_uuids.stdout_lines|length }} registered with ironic than requested {{ compute_count|int + controller_count|int }}. So we will be adjusting controller and compute count according to registered available nodes"
        when: nodes_uuids.stdout_lines|length < (compute_count|int + controller_count|int)

      - name: Adjust compute count
        set_fact:
            compute_count: "{{ compute_count|int - 1 }}"
        when: nodes_uuids.stdout_lines|length < (compute_count|int + controller_count|int)
        with_items: "{{ nodes_uuids }}"

      - name: fail when compute count is less than 1
        fail:
            msg: "Failing as compute count is less than 1"
        when: compute_count|int < 1

      - name: run tripleo-overcloud deploy
        shell: |
            source .venv/bin/activate
            infrared tripleo-overcloud -vvv --version {{ osp_release }} --deployment-files {{ nic_configs }} --introspect no --tagging no --deploy yes --controller-nodes {{ controller_count }} --compute-nodes {{ compute_count }} --network-protocol ipv4 --network-backend vxlan --public-network false > {{ log_directory }}/overcloud_deploy.log 2&>1
        args:
            chdir: "{{ infrared_dir }}"
        when: extra_templates is not defined and parameter_defaults is not defined

      - name: run tripleo-overcloud deploy with extra templates
        shell: |
            source .venv/bin/activate
            infrared tripleo-overcloud -vvv --version {{ osp_release }} --build {{ osp_puddle }}  --deployment-files {{ nic_configs }} --introspect no --tagging no --deploy yes --controller-nodes {{ controller_count }} --compute-nodes {{ compute_count }} --overcloud-templates {{ infrared_dir }}/plugins/tripleo-overcloud/vars/overcloud/templates/extra.yml --network-protocol ipv4 --network-backend vlan --public-network false > {{ log_directory }}/overcloud_deploy.log 2&>1
        args:
            chdir: "{{ infrared_dir }}"
        when: ( extra_templates is defined and extra_templates|length>0 ) or ( parameter_defaults is defined and parameter_defaults|length>0 )

      - name: create vlan interface on external interface
        vars:
            vlan_interface: "{{ external_interface }}.{{ external_network_vlan_id }}"
            ansible_python_interpreter: "{{ python_interpreter }}"
        shell: |
            ip link add link {{ external_interface }} name {{ vlan_interface }} type vlan id {{ external_network_vlan_id }}
            ip link set dev {{ external_interface }} up
            ip link set dev {{ vlan_interface }} up
            ip a a {{ external_gateway }} brd {{ external_network_broadcast }} dev {{ vlan_interface }}
        delegate_to: "{{ undercloud_hostname }}"
        become: true

      - name: masquerade on public interface
        vars:
            ansible_python_interpreter: "{{ python_interpreter }}"
        shell: |
            iptables -t nat -A POSTROUTING -o {{ public_interface }} -j MASQUERADE
        delegate_to: "{{ undercloud_hostname }}"
        become: true

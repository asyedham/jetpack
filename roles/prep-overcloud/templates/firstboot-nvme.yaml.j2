heat_template_version: {{ heat_template_version }}

description: >
  This is an example showing how you can do firstboot configuration
  of the nodes via cloud-init.  To enable this, replace the default
  mapping of OS::TripleO::NodeUserData in ../overcloud_resource_registry*
parameters:
  ComputeKernelArgs:
    description: >
      Space seprated list of Kernel args to be update to grub.
      The given args will be appended to existing args of GRUB_CMDLINE_LINUX in file /etc/default/grub
      Example: "intel_iommu=on"
    type: string
    default: ""

resources:
  userdata:
    type: OS::Heat::MultipartMime
    properties:
      parts:
      - config: {get_resource: compute_kernel_args}

  # Verify the logs on /var/log/cloud-init.log on the overcloud node
  compute_kernel_args:
    type: OS::Heat::SoftwareConfig
    properties:
      config:
        str_replace:
          template: |
            #!/bin/bash
            set -x
            FORMAT='pci'
            FORMAT_MOUNT='compute'
            if [[ $(hostname) == *$FORMAT* ]] ; then
              echo "passthrough_nvme"
              {% if passthrough_nvme is defined %}
                sed "s/^\(GRUB_CMDLINE_LINUX=\".*\)\"/\1 $KERNEL_ARGS\"/g" -i /etc/default/grub ;
                grub2-mkconfig -o /etc/grub2.cfg
                reboot
              {% endif %}
            elif [[ $(hostname) != *$FORMAT* ]] && [[ $(hostname) == *$FORMAT_MOUNT* ]] ; then
              echo "mount_nvme"
              {% if mount_nvme is defined %}
                mkdir -p /var/lib/nova
                mkfs -t xfs -f /dev/nvme0n1
                mount /dev/nvme0n1 /var/lib/nova
                chmod a+w /var/lib/nova
                echo UUID=`sudo blkid -s UUID -o value /dev/nvme0n1` /var/lib/nova xfs discard,defaults,nofail 0 2 | sudo tee -a /etc/fstab
              {% endif %}
            fi
          params:
            $KERNEL_ARGS: {get_param: ComputeKernelArgs}


outputs:
  OS::stack_id:
    value: {get_resource: userdata}

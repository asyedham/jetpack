---
- hosts: localhost
  vars:
      undercloud_host: "{{ groups.undercloud|first }}"
  tasks:
      - name: get subnet mask
        shell: |
            echo {{ cidr }} | cut -d '/' -f2
        register: prefix

      - name: set subnet mask
        set_fact:
            subnet_mask: "{{ prefix.stdout }}"

      - block:
          - name: list oc_instackenv_content
            shell: |
              echo "{{ (oc_instackenv_content.nodes[item | int].pm_addr | replace('mgmt-','') | replace('-drac', '')) }}"
            with_sequence: 0-{{ (oc_instackenv_content.nodes|length - 1) }}
            register: host_list 
          - debug:
              msg: "{{ item.stdout }}"
            with_items: "{{ host_list.results }}"

  
          - name: Get Product Name of 1029u
            shell: |
              dmidecode -t system | grep "Product Name" | cut -d '-' -f3
            register: product_name
            delegate_to: "{{ item.stdout }}"
            with_items: "{{ host_list.results }}"


          - debug:
              var: "{{ item.stdout }}"
            with_items: "{{ product_name.results }}"

          - name: set_fact for rhel8_interfaces
            set_fact: 
              rhel8_interfaces: "{{  rhel8_interfaces|default([]) + [((item.stdout == 'TN10RT') | ternary('rhel8_interfaces_tn10rt', (item.stdout == 'TRTP') | ternary('rhel8_interfaces_tn10rt','rhel8_interfaces')))] }}"
            with_items: "{{ product_name.results }}"

          - debug:
              msg: "{{ rhel8_interfaces }}"

          - name: set fact for iface_rhel_version
            set_fact:
              iface_rhel_version: "{{ iface_rhel_version|default([]) + [(osp_release|int > 14)| ternary( item, 'rhel7_interfaces')] }}"
            with_items: "{{ rhel8_interfaces }}"

          - debug:
              msg: "{{ iface_rhel_version }}"

          - name: set interfaces
            set_fact:
              ifaces: "{{ (ifaces|default([]) + [lab_vars['machine_types'][item[0]][item[1]][item[2]]]) | unique }}"
            with_together:
              - "{{ vendors }}"
              - "{{ machine_types }}"
              - "{{ iface_rhel_version }}"
          - debug:
              msg: "{{ ifaces }}"


        vars:
          lab_vars: "{{ (lab_name == 'scale') | ternary(scale, alias) }}"
        when: lab_name in ['scale', 'alias']

      - name: set interfaces for non scale/alias machines
        set_fact:
          ifaces: "{{ (osp_release|int > 14)| ternary(interfaces.rhel8_interfaces, interfaces.rhel7_interfaces) }}"
        when: lab_name not in ['scale', 'alias']

      - name: interfaces is empty
        fail:
            msg: other lab types should specify interfaces
        when: (ifaces is defined) and (ifaces|length == 0)

      # br-isolated will be always first interface, followed by br-ctlplane,
      # br-tenant and br-external. br-external and br-ctlplane will be shared if
      # no separate nic avaialble for external interface.


      - name: set control and external interfaces
        set_fact:
          ctlplane_interfaces: "{{  ctlplane_interfaces|default([]) +[(item|length > 1)| ternary(item[1], item[0])]  }}"
        with_nested:
          - "{{ ifaces }}"

      - debug:
          msg: "{{ ctlplane_interfaces }}"


      - name: set external interface
        set_fact:
          external_interfaces: "{{ external_interfaces|default([]) + [(item|length > 3) | ternary(item[3], item[1] )] }}"
        when: item|length > 1
        with_nested:
          - "{{ ifaces }}"

      - name: set external interface
        set_fact:
          external_interfaces: "{{ external_interfaces|default([]) + [(item|length > 3) | ternary(item[3], item[0] )] }}"
        when: item|length == 1
        with_nested:
          - "{{ ifaces }}"

      - debug:
          msg: "{{ external_interfaces }}"

      - name: set tenant interface
        set_fact:
          tenant_interfaces: "{{ tenant_interfaces|default([]) + [item[2]] }}"
        when: item|length > 2
        with_nested:
          - "{{ ifaces }}"

      - debug:
          msg: "{{ tenant_interfaces }}"

      - name: set isolated interface
        set_fact:
          isolated_interfaces: "{{ isolated_interfaces|default([])+ [item[0]] }}"
        when: item|length > 1
        with_nested:
          - "{{ ifaces }}"

      - debug:
          msg: "{{ isolated_interfaces }}"

      - name: set nic configs
        set_fact:
          nic_configs: "{{ ansible_user_dir }}/virt"

      - name: create nic-configs directory structure in infrared format
        file:
          path: "{{ ansible_user_dir }}/virt/network/vlans/legacy"
          state: directory

      # infrared uses nic configs under 'legacy' directory for osp release version 10
      - name: set nic-config path
        set_fact:
          nic_config_path: "{{ ansible_user_dir }}/virt/network/vlans{{ ((osp_release|int > 10) | ternary('', '/legacy')) }}"

      - name: set machines_type
        set_fact:
          compute_machine_types: "{{ (machine_types|default([]) + [item.pm_addr.split('.')[0].split('-')[4]])| unique }}"
        with_items: "{{ oc_instackenv_content.nodes }}"
        vars:
          oc_instackenv_content: "{{ lookup('file', '{{ overcloud_instackenv_path }}') | from_json }}"
      - debug:
          msg: "{{ compute_machine_types }}"

      - name: prepare network-environment.yaml.j2
        template:
            src: "network-environment.yaml.j2"
            dest: "{{ ansible_user_dir }}/virt/network/network-environment.yaml.j2"
            force: yes
 
      - name: prepare controller.yaml.j2
        vars:
          ctlplane_interface: "{{ item.1[0] }}"
          external_interface: "{{ item.2[0] }}"
          tenant_interface: "{{ item.3[0] }}"
          isolated_interface: "{{ item.4[0] }}"
        template:
          src: "{{ (osp_release|int > 10) | ternary('controller.yaml.j2', false) }}"
          dest: "{{ nic_config_path }}/controller.yaml.j2"
          force: yes
        with_together:
         - "{{ compute_machine_types }}"
         - "{{ ctlplane_interfaces }}"
         - "{{ external_interfaces }}"
         - "{{ tenant_interfaces }}"
         - "{{ isolated_interfaces }}"


      - name: prepare compute.yaml.j2
        vars:
          ctlplane_interface: "{{ item.1 }}"
          external_interface: "{{ item.2 }}"
          tenant_interface: "{{ item.3 }}"
          isolated_interface: "{{ item.4 }}"
        template:
          src: "{{ (osp_release|int > 10) | ternary('compute.yaml.j2', false) }}"
          dest: "{{ nic_config_path }}/{{ item.0 }}_compute.yaml.j2"
          force: yes
       
        with_together: 
         - "{{ compute_machine_types }}"
         - "{{ ctlplane_interfaces }}"
         - "{{ external_interfaces }}"
         - "{{ tenant_interfaces }}"
         - "{{ isolated_interfaces }}"
